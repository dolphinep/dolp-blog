{"version":3,"sources":["reportWebVitals.js","context/auth.js","components/MenuBar.js","utils/graphql.js","utils/MyPopup.js","components/LikeButton.js","components/DeleteButton.js","components/EditButton.js","components/PostCard.js","utils/hooks.js","components/PostForm.js","components/AuthorCard.js","pages/Home.js","pages/Register.js","pages/Login.js","pages/Contact.js","pages/Timer.js","utils/AuthRouter.js","components/editor/QuillEditor.js","pages/SinglePost.js","App.js","ApolloProvider.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","user","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","createContext","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","MenuBar","useContext","pathname","window","location","path","substr","useState","activeItem","setActiveItem","handleItemClick","e","name","Menu","pointing","secondary","size","color","Item","username","active","onClick","as","Link","to","position","FETCH_POSTS_QUERY","gql","MyPopup","content","children","Popup","inverted","trigger","LIKE_POST_MUTATION","LikeButton","post","id","likeCount","likes","liked","setLiked","useEffect","find","like","useMutation","variables","postID","onError","error","console","log","likePost","likeButton","Button","Icon","basic","labelPosition","Label","DELETE_POST_MUTATION","DELETE_COMMENT_MUTATION","DeleteButton","commentID","callback","confirmOpen","setConfirmOpen","mutation","refetchQueries","query","err","deletePostOrMutation","floated","icon","style","margin","Confirm","open","onCancel","onConfirm","EditButton","PostCard","title","body","createdAt","commentCount","Card","fluid","Content","Image","src","Header","Meta","moment","fromNow","Description","extra","useForm","values","setValues","onChange","event","target","onSubmit","preventDefault","CREATE_POST_MUTATION","PostForm","createPost","onCompleted","Form","Field","Input","placeholder","TextArea","compact","className","marginBottom","graphQLErrors","message","AuthorCard","detail","Container","textAlign","centered","Divider","Home","useQuery","loading","data","Grid","marginTop","relaxed","stackable","reversed","Column","width","Segment","Row","columns","stretched","Loader","Transition","Group","getPosts","map","computer","mobile","REGISTER_USER","Register","context","errors","setErrors","addUser","email","password","confirmPassword","update","_","register","history","push","extensions","exception","noValidate","label","Object","keys","length","LOGIN_USER","Login","loginUser","height","verticalAlign","maxWidth","stacked","iconPosition","Message","href","Contact","List","Rating","maxRating","defaultRating","t","Timer","time","setTime","interval","setInterval","clearInterval","divided","largeScreen","getHours","getMinutes","getSeconds","AuthRoute","Component","component","rest","render","__ISMSIE__","navigator","userAgent","match","Clipboard","getMetaTagElements","stringContent","el","document","createElement","innerHTML","getElementsByTagName","clipboardData","getData","pastedData","urlMatches","forEach","link","axios","get","image","url","node","getAttribute","rendered","range","quill","getSelection","index","pasteHTML","setSelection","catch","Quill","import","BlockEmbed","ImageBlot","imgTag","setAttribute","alt","blotName","tagName","VideoBlot","videoTag","iframeTag","FileBlot","prefixTag","innerText","bTag","linkTag","appendChild","querySelector","PollBlot","QuillEditor","handleChange","html","setState","editorHtml","onEditorChange","imageHandler","inputOpenImageRef","current","click","videoHandler","inputOpenVideoRef","fileHandler","inputOpenFileRef","insertImage","a","stopPropagation","currentTarget","files","file","formData","FormData","config","header","append","response","status","alert","reactQuillRef","getEditor","focus","insertEmbed","_isMounted","onFilesChange","insertVideo","insertFile","modules","syntax","toolbar","container","handlers","insertPoll","pollHandler","formats","old","React","createRef","this","defaultValue","persist","ref","theme","accept","display","SUBMIT_COMMENT_MUTATION","FETCH_POST_QUERY","UPDATE_POST_MUTATION","SinglePost","postMarkup","params","setTitle","setBody","story","setStory","comment","setComment","editing","setEditing","setFiles","commentInputRef","useRef","blur","submitComment","submitEdit","getPost","comments","only","float","Or","hidden","parse","dividing","Comment","Avatar","Author","Metadata","Text","disabled","trim","App","exact","httpLink","createHttpLink","uri","errorLink","networkError","locations","authLink","setContext","headers","Authorization","client","ApolloClient","concat","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider","getElementById"],"mappings":"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","file":"static/js/main.f12a2f8c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useReducer, createContext } from 'react'\nimport jwtDecode from 'jwt-decode'\n\nconst initialState = {\n    user: null\n}\n\nif (localStorage.getItem(\"dolp-token\")) {\n    const decodedToken = jwtDecode(localStorage.getItem(\"dolp-token\"))\n    if (decodedToken.exp * 1000 < Date.now()) {\n        localStorage.removeItem(\"dolp-token\")\n    } else {\n        initialState.user = decodedToken\n    }\n}\n\nconst AuthContext = createContext({\n    user: null,\n    login: (userData) => { },\n    logout: () => { }\n})\n\nfunction authReducer(state, action) {\n    switch (action.type) {\n        case \"LOGIN\":\n            return {\n                ...state,\n                user: action.payload\n            }\n        case \"LOGOUT\":\n            return {\n                ...state,\n                user: null\n            }\n        default:\n            return state\n    }\n}\n\nfunction AuthProvider(props) {\n    const [state, dispatch] = useReducer(authReducer, initialState)\n\n    function login(userData) {\n        localStorage.setItem(\"dolp-token\", userData.token)\n        dispatch({\n            type: 'LOGIN',\n            payload: userData\n        })\n    }\n\n    function logout() {\n        localStorage.removeItem(\"dolp-token\")\n        dispatch({\n            type: 'LOGOUT',\n        })\n    }\n    return (\n        <AuthContext.Provider\n            value={{ user: state.user, login, logout }}\n            {...props}\n        />\n    )\n}\n\nexport { AuthContext, AuthProvider }","import React, { useContext, useState } from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nimport { AuthContext } from '../context/auth'\n\nfunction MenuBar() {\n\n    const { user, logout } = useContext(AuthContext)\n    const pathname = window.location.pathname\n\n    const path = pathname === '/' ? 'home' : pathname.substr(1)\n    const [activeItem, setActiveItem] = useState(path)\n    const handleItemClick = (e, { name }) => setActiveItem(name)\n\n    const menuBar = user ? (\n        <Menu pointing secondary size=\"medium\" color=\"blue\">\n            <Menu.Item\n                name={user.username}\n                active={activeItem === user.username}\n                onClick={handleItemClick}\n                as={Link}\n                to=\"/dolp-blog\"\n            />\n            <Menu.Item\n                name='contact'\n                active={activeItem === 'contact'}\n                onClick={handleItemClick}\n                as={Link}\n                to=\"/contact\"\n            />\n            <Menu.Item\n                name='timer'\n                active={activeItem === 'timer'}\n                onClick={handleItemClick}\n                as={Link}\n                to=\"/timer\"\n            />\n            <Menu.Menu position='right'>\n                <Menu.Item\n                    name='logout'\n                    onClick={logout}\n                />\n            </Menu.Menu>\n        </Menu>\n    ) : (\n            <Menu pointing secondary size=\"medium\" color=\"blue\" >\n                <Menu.Item\n                    name='home'\n                    active={activeItem === 'home'}\n                    onClick={handleItemClick}\n                    as={Link}\n                    to=\"/dolp-blog\"\n                />\n                <Menu.Item\n                    name='contact'\n                    active={activeItem === 'contact'}\n                    onClick={handleItemClick}\n                    as={Link}\n                    to=\"/contact\"\n                />\n                <Menu.Item\n                    name='timer'\n                    active={activeItem === 'timer'}\n                    onClick={handleItemClick}\n                    as={Link}\n                    to=\"/timer\"\n                />\n                <Menu.Menu position='right'>\n                    <Menu.Item\n                        name='login'\n                        active={activeItem === 'login'}\n                        onClick={handleItemClick}\n                        as={Link}\n                        to=\"/login\"\n                    />\n                    <Menu.Item\n                        name='register'\n                        active={activeItem === 'register'}\n                        onClick={handleItemClick}\n                        as={Link}\n                        to=\"/register\"\n                    />\n                </Menu.Menu>\n            </Menu>\n        )\n\n    return menuBar\n\n}\n\nexport default MenuBar","import gql from 'graphql-tag';\n\nexport const FETCH_POSTS_QUERY = gql`\n  {\n    getPosts {\n      id\n      title\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;","import { Popup } from 'semantic-ui-react';\nimport React from 'react';\n\nfunction MyPopup({ content, children }) {\n  return <Popup inverted content={content} trigger={children} />;\n}\n\nexport default MyPopup;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Button, Label, Icon } from 'semantic-ui-react';\n\nimport MyPopup from '../utils/MyPopup';\n\nfunction LikeButton({ user, post: { id, likeCount, likes } }) {\n    const [liked, setLiked] = useState(false);\n\n    useEffect(() => {\n        if (user && likes.find((like) => like.username === user.username)) {\n            setLiked(true);\n        } else setLiked(false);\n    }, [user, likes]);\n\n    const [likePost] = useMutation(LIKE_POST_MUTATION, {\n        variables: { postID: id },\n        onError(error){\n            console.log(\"[Like Error]: \", error)\n        }\n    });\n\n    const likeButton = user ? (\n        liked ? (\n            <Button size=\"small\" color=\"red\">\n                <Icon name=\"heart\" />\n            </Button>\n        ) : (\n                <Button size=\"small\" color=\"red\" basic>\n                    <Icon name=\"heart\" />\n                </Button>\n            )\n    ) : (\n            <Button size=\"small\"  as={Link} to=\"/login\" color=\"red\" basic>\n                <Icon name=\"heart\" />\n            </Button>\n        );\n\n    return (\n        <Button as=\"div\" labelPosition=\"right\" onClick={likePost}>\n            <MyPopup content={liked ? 'Unlike' : 'Like'}>{likeButton}</MyPopup>\n            <Label basic color=\"red\" pointing=\"left\">\n                {likeCount}\n            </Label>\n        </Button>\n    );\n}\n\n// automatic update like in post (in client)\nconst LIKE_POST_MUTATION = gql`\n  mutation likePost($postID: ID!) {\n    likePost(postID: $postID) {\n      id\n      likes {\n        id\n        username\n      }\n      likeCount\n    }\n  }\n`;\n\nexport default LikeButton;","import React, { useState } from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Button, Confirm, Icon } from 'semantic-ui-react';\n\nimport { FETCH_POSTS_QUERY } from '../utils/graphql';\nimport MyPopup from '../utils/MyPopup';\n\nfunction DeleteButton({ postID, commentID, callback }) {\n  const [confirmOpen, setConfirmOpen] = useState(false);\n\n  const mutation = commentID ? DELETE_COMMENT_MUTATION : DELETE_POST_MUTATION;\n\n  const [deletePostOrMutation] = useMutation(mutation, {\n    refetchQueries: [{\n      query: FETCH_POSTS_QUERY\n    }],\n    onError(err) {\n      console.log(err)\n    },\n    variables: {\n      postID,\n      commentID\n    }\n  });\n  return (\n    <>\n      <MyPopup content={commentID ? 'Delete comment' : 'Delete post'}>\n        <Button\n          as=\"div\"\n          floated=\"right\"\n          icon\n          size=\"small\"\n          onClick={() => setConfirmOpen(true)}\n        >\n          <Icon name=\"trash\" style={{ margin: 0 }} size=\"small\"/>\n        </Button>\n      </MyPopup>\n      <Confirm\n        open={confirmOpen}\n        onCancel={() => setConfirmOpen(false)}\n        onConfirm={deletePostOrMutation}\n      />\n    </>\n  );\n}\n\nconst DELETE_POST_MUTATION = gql`\n  mutation deletePost($postID: ID!) {\n    deletePost(postID: $postID)\n  }\n`;\n\nconst DELETE_COMMENT_MUTATION = gql`\n  mutation deleteComment($postID: ID!, $commentID: ID!) {\n    deleteComment(postID: $postID, commentID: $commentID) {\n      id\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n      commentCount\n    }\n  }\n`;\n\nexport default DeleteButton;","import React, { useState } from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nimport MyPopup from '../utils/MyPopup';\n\nfunction EditButton({ postID, commentID, callback }) {\n    const [confirmOpen, setConfirmOpen] = useState(false);\n\n    return (\n        <>\n            <MyPopup content={commentID ? 'Edit comment' : 'Write Story'}>\n                <Button\n                    floated=\"right\"\n                    icon\n                    size=\"small\"\n                    onClick={() => setConfirmOpen(true)}\n                    as={Link}\n                    to={`/posts/${postID}`}\n                >\n                    <Icon name=\"pencil alternate\" style={{ margin: 0 }} size=\"small\" />\n                </Button>\n            </MyPopup>\n        </>\n    );\n}\n\n\nexport default EditButton;","import React, { useContext } from 'react';\nimport { Button, Card, Icon, Label, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { AuthContext } from '../context/auth';\nimport LikeButton from './LikeButton';\nimport DeleteButton from './DeleteButton';\nimport EditButton from './EditButton'\nimport MyPopup from '../utils/MyPopup';\n\nfunction PostCard({\n    post: { title, body, createdAt, id, username, likeCount, commentCount, likes }\n}) {\n    const { user } = useContext(AuthContext);\n\n    return (\n        <Card color=\"blue\" fluid>\n            <Card.Content>\n                <Image\n                    floated=\"right\"\n                    size=\"mini\"\n                    src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\n                />\n                <Card.Header as={Link} to={`/posts/${id}`}>{title}</Card.Header>\n                <Card.Meta as={Link} to={`/posts/${id}`}>\n                    {moment(createdAt).fromNow(true)}\n                </Card.Meta>\n                <Card.Meta>{username}</Card.Meta>\n                <Card.Description >{body}</Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                <LikeButton user={user} post={{ id, likes, likeCount }} />\n                <MyPopup content=\"Comment on post\">\n                    <Button labelPosition=\"right\" as={Link} to={`/posts/${id}`}>\n                        <Button color=\"blue\" basic>\n                            <Icon name=\"comments\" />\n                        </Button>\n                        <Label basic color=\"blue\" pointing=\"left\">\n                            {commentCount}\n                        </Label>\n                    </Button>\n                </MyPopup>\n                {user && user.username === username && <DeleteButton postID={id} />}\n                {user && user.username === username && <EditButton postID={id} />}\n            </Card.Content>\n        </Card>\n    );\n}\n\nexport default PostCard;","import { useState } from 'react'\n\nexport const useForm = (callback, initialState = {}) => {\n    const [values, setValues] = useState(initialState)\n\n    const onChange = (event) => {\n        setValues({ ...values, [event.target.name]: event.target.value })\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault()\n        callback()\n    }\n\n    return {\n        onChange,\n        onSubmit,\n        values\n    }\n}","import React from 'react';\nimport { Button, Form, Header } from 'semantic-ui-react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport { useForm } from '../utils/hooks';\nimport { FETCH_POSTS_QUERY } from '../utils/graphql';\n\nfunction PostForm() {\n    const { values, onChange, onSubmit } = useForm(createPostCallback, {\n        title: '',\n        body: ''\n    });\n\n    const [createPost, { error }] = useMutation(CREATE_POST_MUTATION, {\n        refetchQueries: [{\n            query: FETCH_POSTS_QUERY\n        }],\n        onError(err) {\n            console.log(err)\n        },\n        onCompleted() {\n            values.title = \"\"\n            values.body = \"\"\n        },\n        variables: values,\n    });\n\n    function createPostCallback() {\n        createPost();\n    }\n\n    return (\n        <>\n            <Form onSubmit={onSubmit}>\n                <Header as='h2'>Create post</Header>\n                <Form.Field>\n                    <Form.Input\n                        placeholder=\"Title\"\n                        name=\"Title\"\n                        onChange={onChange}\n                        value={values.title}\n                        error={error ? true : false}\n                    />\n                    <Form.TextArea\n                        placeholder=\"Sub-Title\"\n                        name=\"body\"\n                        onChange={onChange}\n                        value={values.body}\n                        error={error ? true : false}\n                    />\n                    <Button  compact type=\"submit\" color=\"blue\">\n                        Submit\n                    </Button>\n                </Form.Field>\n            </Form>\n            {error && (\n                <div className=\"ui error message\" style={{ marginBottom: 20 }}>\n                    <ul className=\"list\">\n                        <li>{error.graphQLErrors[0].message}</li>\n                    </ul>\n                </div>\n            )}\n        </>\n    );\n}\n\nconst CREATE_POST_MUTATION = gql`\n  mutation createPost($title: String!, $body: String!) {\n    createPost(title: $title, body:$body) {\n      id\n      title\n      body\n      story\n      createdAt\n      username\n      likes {\n        id\n        username\n        createdAt\n      }\n      likeCount\n      comments {\n        id\n        body\n        username\n        createdAt\n      }\n      commentCount\n    }\n  }\n`;\n\nexport default PostForm;","import { Image, Container, Header, Divider } from 'semantic-ui-react'\nimport '../sass/home.scss'\n\nconst AuthorCard = () => {\n    const detail = {\n        header: 'Dolp Blog',\n        description: 'ยินดีต้อนรับครับผม นี่เป็นบล็อคส่วนตัวของผมเอง ถ้ามีตรงไหนแนะนำสามารถคอมเม้น หรือทักมาคุยได้ครับ',\n        update: '22/JAN/2021'\n    }\n\n    return (\n        // <Card centered color=\"blue\">\n        //     <Image className=\"author-image\" src='https://pingbox.s3-ap-southeast-1.amazonaws.com/pictures/dolphin.png' size='medium' circular />\n        //     <Card.Content>\n        //         <Card.Header>{detail.header}</Card.Header>\n        //         <Card.Description>{detail.description}</Card.Description>\n        //     </Card.Content>\n        // </Card>\n        <Container textAlign=\"center\">\n            <Image className=\"author-image\" src='https://pingbox.s3-ap-southeast-1.amazonaws.com/pictures/dolphin.png' size='medium' centered />\n            <Header>\n                {detail.header}\n            </Header>\n            <p>{detail.description}</p>\n            <Divider />\n            <p>update:  {detail.update}</p>\n        </Container>\n    )\n}\n\nexport default AuthorCard","import React, { useContext } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { Grid, Header, Segment, Transition, Loader } from 'semantic-ui-react'\n\nimport { FETCH_POSTS_QUERY } from '../utils/graphql';\nimport PostCard from '../components/PostCard'\nimport PostForm from '../components/PostForm'\nimport { AuthContext } from '../context/auth'\n\nimport '../sass/home.scss'\nimport AuthorCard from '../components/AuthorCard';\n\nfunction Home() {\n    const { user } = useContext(AuthContext)\n    const { loading, data } = useQuery(FETCH_POSTS_QUERY);\n    return (\n        <Grid style={{ marginTop: '3em' }} relaxed stackable reversed='mobile' >\n            <Grid.Column width={12}>\n                {user && (\n                    <Segment>\n                        <PostForm />\n                    </Segment>\n                )}\n                <Grid.Row className=\"page-title\">\n                    <Header as='h2'>Recent Posts</Header>\n                </Grid.Row>\n                <Grid columns={3}>\n                    <Grid.Row stretched stackable columns={2}>\n                        {loading ? (\n                            <Loader>Loading</Loader>\n                        ) : (\n                                <Transition.Group>\n                                    {data.getPosts &&\n                                        data.getPosts.map((post) => (\n                                            <Grid.Column computer={8} mobile={16} key={post.id} style={{ marginBottom: 20 }}>\n                                                <PostCard post={post} />\n                                            </Grid.Column>\n                                        ))}\n                                </Transition.Group>\n                            )}\n                    </Grid.Row>\n                </Grid>\n            </Grid.Column>\n            <Grid.Column width={4}>\n                <AuthorCard />\n            </Grid.Column>\n        </Grid>\n    );\n}\n\nexport default Home","import React, { useContext, useState } from 'react'\nimport { Button, Form, Header, Segment } from 'semantic-ui-react'\nimport { useMutation } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n\nimport { useForm } from '../utils/hooks'\nimport { AuthContext } from '../context/auth'\n\nfunction Register(props) {\n    const context = useContext(AuthContext)\n    const [errors, setErrors] = useState({})\n\n    // take initial state and callback \n    const { onChange, onSubmit, values } = useForm(registerUser, {\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const [addUser, { loading }] = useMutation(REGISTER_USER, {\n        // destructor result จาก mutation ปกติจะส่ง data มา และมีชื่อ function อยู่ข้างใน\n        update(_, { data: { register: userData } }) {\n            context.login(userData)\n            props.history.push('/')\n        },\n        onError(err) {\n            setErrors(err.graphQLErrors[0].extensions.exception.errors)\n        },\n        variables: values\n    })\n\n    // การเติม function แบบนี้\n    //  ทำให้ adduser ใน useForm สามารถ recognize fx ได้ในตอนเริม\n    function registerUser() {\n        addUser()\n    }\n\n    return (\n        <div className='form-container'>\n            <Form onSubmit={onSubmit} noValidate className={loading ? 'loading' : ''}>\n                <Header as=\"h2\" color='blue' textAlign='center'>Register</Header>\n                <Segment>\n                    <Form.Input\n                        label=\"Username\"\n                        placeholder=\"Username...\"\n                        name=\"username\"\n                        type=\"text\"\n                        value={values.username}\n                        error={errors.username ? true : false}\n                        onChange={onChange}\n                    />\n                    <Form.Input\n                        label=\"Email\"\n                        placeholder=\"Email...\"\n                        name=\"email\"\n                        type=\"email\"\n                        value={values.email}\n                        error={errors.email ? true : false}\n                        onChange={onChange}\n                    />\n                    <Form.Input\n                        label=\"Password\"\n                        placeholder=\"Password...\"\n                        name=\"password\"\n                        type=\"password\"\n                        value={values.password}\n                        error={errors.password ? true : false}\n                        onChange={onChange}\n                    />\n                    <Form.Input\n                        label=\"Confirm Password\"\n                        placeholder=\"Confirm Password...\"\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        value={values.confirmPassword}\n                        error={errors.confirmPassword ? true : false}\n                        onChange={onChange}\n                    />\n                    <Button type=\"submit\" fluid color=\"blue\">\n                        Register\n                </Button>\n                </Segment>\n            </Form>\n            {Object.keys(errors).length > 0 && (\n                <div className=\"ui error message\">\n                    <ul className=\"list\">\n                        {Object.values(errors).map((value) => (\n                            <li key={value}>\n                                {value}\n                            </li>\n                        ))}\n                    </ul>\n                </div>)}\n        </div>\n    )\n}\n\nconst REGISTER_USER = gql`\n    mutation register(\n        $username: String!\n        $email: String!\n        $password: String!\n        $confirmPassword: String!\n    ){\n        register(\n            registerInput:{\n                username: $username\n                email:$email\n                password:$password\n                confirmPassword:$confirmPassword\n            }\n        ){\n            id email username createdAt token\n        }\n    }\n`;\n\nexport default Register","import React, { useContext, useState } from 'react';\nimport { Button, Message, Segment, Image, Header, Form, Grid } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\n// import { AuthContext } from '../context/auth';\nimport { useForm } from '../utils/hooks';\n\nimport { AuthContext } from '../context/auth'\n\nfunction Login(props) {\n    const context = useContext(AuthContext);\n    const [errors, setErrors] = useState({});\n\n    const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n        username: '',\n        password: ''\n    });\n\n    const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n        update(_, { data: { login: userData } }) {\n            context.login(userData);\n            props.history.push('/');\n        },\n        onError(err) {\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\n        },\n        variables: values\n    });\n\n    function loginUserCallback() {\n        loginUser();\n    }\n\n    return (\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n                <Form size='large' onSubmit={onSubmit} noValidate className={loading ? 'loading' : ''}>\n                    <Header as='h2' color='blue' textAlign='center'>\n                        <Image src='https://www.flaticon.com/svg/static/icons/svg/3009/3009728.svg' /> Log-in to your account\n                    </Header>\n                    <Segment stacked>\n                        <Form.Input\n                            placeholder=\"Username..\"\n                            name=\"username\"\n                            type=\"text\"\n                            icon='user'\n                            iconPosition='left'\n                            value={values.username}\n                            error={errors.username ? true : false}\n                            onChange={onChange}\n                        />\n                        <Form.Input\n                            placeholder=\"Password..\"\n                            name=\"password\"\n                            type=\"password\"\n                            icon='lock'\n                            iconPosition='left'\n                            value={values.password}\n                            error={errors.password ? true : false}\n                            onChange={onChange}\n                        />\n                        <Button type=\"submit\" fluid color=\"blue\">Login</Button>\n                    </Segment>\n                </Form>\n                {Object.keys(errors).length > 0 && (\n                    <div className=\"ui error message\">\n                        <ul className=\"list\">\n                            {Object.values(errors).map((value) => (\n                                <li key={value}>{value}</li>\n                            ))}\n                        </ul>\n                    </div>\n                )}\n                <Message>\n                    New to us? <a href='/register'>  Register</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    );\n}\n\nconst LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\n\nexport default Login;","import React from 'react'\nimport { Container, Card, Divider, List, Icon, Rating } from 'semantic-ui-react'\nimport '../sass/contact.scss'\n\nfunction Contact() {\n    return (\n        <Container>\n            <Card.Group centered>\n                <Card>\n                    <Card.Content textAlign=\"center\">\n                        <Card.Header>AUTHOR</Card.Header>\n                        <Divider />\n                        <Card.Description>------  PING  ------</Card.Description>\n                        <Divider />\n                        <Card.Description>Chulalongkorn University</Card.Description>\n                        <Divider />\n                        <Card.Description>\n                            <Icon name=\"mail\" />ping.waragon@gmail.com</Card.Description>\n                        <br />\n                        <Card.Description>\n                            <Icon name=\"phone\" />+66-88-585-1415</Card.Description>\n                        <br />\n                        <Card.Description href=\"https://github.com/dolphinep\">\n                            <Icon name=\"github\" />https://github.com/dolphinep</Card.Description>\n                        <br />\n                        <br />\n                        <Card.Description href=\"https://medium.com/@ping.waragon\">\n                            <Icon name=\"medium\" />https://medium.com/@ping.waragon</Card.Description>\n                    </Card.Content>\n                </Card>\n                <Card>\n                    <Card.Content textAlign=\"center\">\n                        <Card.Header>INTEREST</Card.Header>\n                        <Divider />\n                        <Card.Description>INTERESTED IN ALL TECHNOLOGY ON/OUT THE EARTH</Card.Description>\n                        <Divider />\n                        <Card.Description>\n                            <List >\n                                <List.Item>\n                                    Full-Stack Developer</List.Item>\n                                <Icon name=\"heart outline\" />\n                                <List.Item>\n                                    BlockChain Developer</List.Item>\n                                <Icon name=\"heart outline\" />\n                                <List.Item>\n                                    Machine Learning</List.Item>\n                                <Icon name=\"heart outline\" />\n                                <List.Item>\n                                    Technology Consult</List.Item>\n                            </List>\n                        </Card.Description>\n                    </Card.Content>\n                </Card>\n                <Card>\n                    <Card.Content textAlign=\"center\">\n                        <Card.Header>SKILL</Card.Header>\n                        <Divider />\n                        <Card.Description>Base on internship, classroom and self study (max 5)</Card.Description>\n                        <Divider />\n                        <Card.Description textAlign=\"left\">\n                            <List >\n                                <List.Item>\n                                    <Icon name=\"thumbs up outline\" />\n                                    <List.Content>Front-End\n                                        <List.List>\n                                            <List.Item>\n                                                React(4)\n                                                <Rating className=\"skill\" maxRating={5} defaultRating={4} icon='star' />\n                                            </List.Item>\n                                            <List.Item>\n                                                CSS/SCSS(2)\n                                                <Rating className=\"skill\" maxRating={5} defaultRating={2} icon='star' />\n                                            </List.Item>\n                                        </List.List>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item>\n                                    <Icon name=\"thumbs up outline\" />\n                                    <List.Content>Back-End\n                                        <List.List>\n                                            <List.Item>\n                                                Golang(4)\n                                                <Rating className=\"skill\" maxRating={5} defaultRating={4} icon='star' />\n                                            </List.Item>\n                                            <List.Item>\n                                                NodeJS(3)\n                                                <Rating className=\"skill\" maxRating={5} defaultRating={3} icon='star' />\n                                            </List.Item>\n                                        </List.List>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item>\n                                    <Icon name=\"thumbs up outline\" />\n                                    <List.Content>Database\n                                        <List.List>\n                                            <List.Item>\n                                                MongoDB(4)\n                                                <Rating className=\"skill\" maxRating={5} defaultRating={4} icon='star' />\n                                            </List.Item>\n                                            <List.Item>\n                                                Postgresql(4)\n                                                <Rating className=\"skill\" maxRating={5} defaultRating={4} icon='star' />\n                                            </List.Item>\n                                        </List.List>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item>\n                                    <Icon name=\"thumbs up outline\" />\n                                    <List.Content>OTHER SKILL\n                                        <List.List>\n                                            <List.Item>\n                                                <Icon name=\"star\" />\n                                                CLOUD - AWS/FIREBASE\n                                          </List.Item>\n                                            <List.Item>\n                                                <Icon name=\"star\" />\n                                                GIT\n                                           </List.Item>\n                                            <List.Item>\n                                                <Icon name=\"star outline\" />\n                                                PYTHON, JAVA, C++\n                                           </List.Item>\n                                            <List.Item>\n                                                <Icon name=\"star\" />\n                                                GRAPHQL\n                                           </List.Item>\n                                        </List.List>\n                                    </List.Content>\n                                </List.Item>\n                            </List>\n                        </Card.Description>\n                    </Card.Content>\n                </Card>\n            </Card.Group>\n        </Container>\n    )\n}\n\nexport default Contact\n\n\n","import React, { useEffect, useState } from 'react'\nimport { Container, Grid } from 'semantic-ui-react'\nimport '../sass/timer.scss'\nlet t = new Date()\n\nconst Timer = () => {\n    const [time, setTime] = useState(t)\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setTime(new Date())\n        }, 1000)\n        return () => clearInterval(interval);\n    }, [])\n    return (\n        <Container>\n            <Grid columns={3} textAlign=\"center\" divided>\n                <Grid.Row className=\"time\">\n                    <Grid.Column largeScreen=\"3\">\n                        {time.getHours() % 12}\n                    </Grid.Column>\n                    <Grid.Column largeScreen=\"3\">\n                        {time.getMinutes()}\n                    </Grid.Column>\n                    <Grid.Column largeScreen=\"3\">\n                        {time.getSeconds()}\n                    </Grid.Column>\n                    {time.getHours() / 12 < 1 ? 'AM' : 'PM'}\n                </Grid.Row>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default Timer\n","// if login แล้วต้องไม่สามารถเข้า register/login route ได้\nimport React, { useContext } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nimport { AuthContext } from '../context/auth'\n\nfunction AuthRoute({ component: Component, ...rest }) {\n    const { user } = useContext(AuthContext)\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                user ? <Redirect to=\"/\" /> : <Component {...props} />\n            }\n        />\n    )\n}\n\nexport default AuthRoute","import React from 'react';\nimport ReactQuill, { Quill } from 'react-quill';\nimport \"react-quill/dist/quill.snow.css\";\nimport { Icon } from 'semantic-ui-react'\nimport axios from 'axios'\n\nconst __ISMSIE__ = navigator.userAgent.match(/Trident/i) ? true : false;\n\n// Quill.register('modules/clipboard', PlainClipboard, true);\n\nconst QuillClipboard = Quill.import('modules/clipboard');\n\nclass Clipboard extends QuillClipboard {\n\n    getMetaTagElements = (stringContent) => {\n        const el = document.createElement('div');\n        el.innerHTML = stringContent;\n        return el.getElementsByTagName('meta');\n    };\n\n    async onPaste(e) {\n        let clipboardData = e.clipboardData || window.clipboardData;\n        let pastedData = await clipboardData.getData('Text');\n\n        const urlMatches = pastedData.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\n        if (urlMatches.length > 0) {\n            e.preventDefault();\n            urlMatches.forEach(link => {\n                axios.get(link)\n                    .then(payload => {\n                        let title, image, url;\n                        for (let node of this.getMetaTagElements(payload)) {\n                            if (node.getAttribute(\"property\") === \"og:title\") {\n                                title = node.getAttribute(\"content\");\n                            }\n                            if (node.getAttribute(\"property\") === \"og:image\") {\n                                image = node.getAttribute(\"content\");\n                            }\n                            if (node.getAttribute(\"property\") === \"og:url\") {\n                                url = node.getAttribute(\"content\");\n                            }\n                        }\n\n                        const rendered = `<a href=${url} target=\"_blank\"><div><img src=${image} alt=${title} width=\"20%\"/><span>${title}</span></div></a>`;\n\n                        let range = this.quill.getSelection();\n                        let position = range ? range.index : 0;\n                        this.quill.pasteHTML(position, rendered, 'silent');\n                        this.quill.setSelection(position + rendered.length);\n                    })\n                    .catch(error => console.error(error));\n            });\n\n        } else {\n            super.onPaste(e);\n        }\n    }\n\n}\nQuill.register('modules/clipboard', Clipboard, true);\n\nconst BlockEmbed = Quill.import('blots/block/embed');\n\nclass ImageBlot extends BlockEmbed {\n\n    static create(value) {\n        const imgTag = super.create();\n        imgTag.setAttribute('src', value.src);\n        imgTag.setAttribute('alt', value.alt);\n        imgTag.setAttribute('width', '100%');\n        return imgTag;\n    }\n\n    static value(node) {\n        return { src: node.getAttribute('src'), alt: node.getAttribute('alt') };\n    }\n\n}\n\nImageBlot.blotName = 'image';\nImageBlot.tagName = 'img';\nQuill.register(ImageBlot);\n\nclass VideoBlot extends BlockEmbed {\n\n    static create(value) {\n        if (value && value.src) {\n            const videoTag = super.create();\n            videoTag.setAttribute('src', value.src);\n            videoTag.setAttribute('title', value.title);\n            videoTag.setAttribute('width', '100%');\n            videoTag.setAttribute('controls', '');\n\n            return videoTag;\n        } else {\n            const iframeTag = document.createElement('iframe');\n            iframeTag.setAttribute('src', value);\n            iframeTag.setAttribute('frameborder', '0');\n            iframeTag.setAttribute('allowfullscreen', true);\n            iframeTag.setAttribute('width', '100%');\n            return iframeTag;\n        }\n    }\n\n    static value(node) {\n        if (node.getAttribute('title')) {\n            return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\n        } else {\n            return node.getAttribute('src');\n        }\n        // return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\n    }\n\n}\n\nVideoBlot.blotName = 'video';\nVideoBlot.tagName = 'video';\nQuill.register(VideoBlot);\n\nclass FileBlot extends BlockEmbed {\n\n    static create(value) {\n        const prefixTag = document.createElement('span');\n        prefixTag.innerText = \"첨부파일 - \";\n\n        const bTag = document.createElement('b');\n        //위에 첨부파일 글자 옆에  파일 이름이 b 태그를 사용해서 나온다.\n        bTag.innerText = value;\n\n        const linkTag = document.createElement('a');\n        linkTag.setAttribute('href', value);\n        linkTag.setAttribute(\"target\", \"_blank\");\n        linkTag.setAttribute(\"className\", \"file-link-inner-post\");\n        linkTag.appendChild(bTag);\n        //linkTag 이런식으로 나온다 <a href=\"btn_editPic@3x.png\" target=\"_blank\" classname=\"file-link-inner-post\"><b>btn_editPic@3x.png</b></a>\n\n        const node = super.create();\n        node.appendChild(prefixTag);\n        node.appendChild(linkTag);\n\n        return node;\n    }\n\n    static value(node) {\n        const linkTag = node.querySelector('a');\n        return linkTag.getAttribute('href');\n    }\n\n}\n\nFileBlot.blotName = 'file';\nFileBlot.tagName = 'p';\nFileBlot.className = 'file-inner-post';\nQuill.register(FileBlot);\n\nclass PollBlot extends BlockEmbed {\n\n    static create(value) {\n        const prefixTag = document.createElement('span');\n        prefixTag.innerText = \"투표 - \";\n\n        const bTag = document.createElement('b');\n        bTag.innerText = value.title;\n\n        const node = super.create();\n        node.setAttribute('id', value.id);\n        node.appendChild(prefixTag);\n        node.appendChild(bTag);\n\n        return node;\n    }\n\n    static value(node) {\n        const id = node.getAttribute('id');\n        const bTag = node.querySelector('b');\n        const title = bTag.innerText;\n        return { id, title };\n    }\n\n}\n\nPollBlot.blotName = 'poll';\nPollBlot.tagName = 'p';\nPollBlot.className = 'poll-inner-post';\nQuill.register(PollBlot);\n\nclass QuillEditor extends React.Component {\n\n    bandId;\n    placeholder;\n    onEditorChange;\n    onFilesChange;\n    onPollsChange;\n    _isMounted;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editorHtml: __ISMSIE__ ? \"<p>&nbsp;</p>\" : props.old,\n            files: [],\n        };\n\n        this.reactQuillRef = null;\n\n        this.inputOpenImageRef = React.createRef();\n        this.inputOpenVideoRef = React.createRef();\n        this.inputOpenFileRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    handleChange = (html) => {\n        console.log('html', html)\n        // https://youtu.be/BbR-QCoKngE\n        // https://www.youtube.com/embed/ZwKhufmMxko\n        // https://tv.naver.com/v/9176888\n        // renderToStaticMarkup(ReactHtmlParser(html, options));\n\n        this.setState({\n            editorHtml: html\n        }, () => {\n            this.props.onEditorChange(this.state.editorHtml);\n        });\n    };\n\n    // I V F P들을  눌렀을떄 insertImage: this.imageHandler로 가서  거기서 inputOpenImageRef를 클릭 시킨다. \n    imageHandler = () => {\n        this.inputOpenImageRef.current.click();\n    };\n\n    videoHandler = () => {\n        this.inputOpenVideoRef.current.click();\n    };\n\n    fileHandler = () => {\n        this.inputOpenFileRef.current.click();\n    };\n\n    insertImage = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n            const file = e.currentTarget.files[0];\n\n            let formData = new FormData();\n            const config = {\n                header: { 'content-type': 'multipart/form-data' }\n            }\n            formData.append(\"image\", file);\n            axios.post(`/image-upload`, formData, config)\n                .then(response => {\n                    if (response.status === 200) {\n                        const quill = this.reactQuillRef.getEditor();\n                        quill.focus();\n\n                        let range = quill.getSelection();\n                        let position = range ? range.index : 0;\n\n                        quill.insertEmbed(position, \"image\", { src: response.data.url });\n                        quill.setSelection(position + 1);\n\n                        if (this._isMounted) {\n                            this.setState({\n                                files: [...this.state.files, file]\n                            }, () => { this.props.onFilesChange(this.state.files) });\n                        }\n                    } else {\n                        return alert('failed to upload file')\n                    }\n                })\n        }\n    };\n\n    insertVideo = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n            const file = e.currentTarget.files[0];\n\n            let formData = new FormData();\n            // const config = {\n            //     header: { 'content-type': 'multipart/form-data' }\n            // }\n            formData.append(\"file\", file);\n\n            // axios.post('/api/blog/uploadfiles', formData, config)\n            //     .then(response => {\n            //         if (response.data.success) {\n\n            //             const quill = this.reactQuillRef.getEditor();\n            //             quill.focus();\n\n            //             let range = quill.getSelection();\n            //             let position = range ? range.index : 0;\n            //             quill.insertEmbed(position, \"video\", { src: \"http://localhost:5000/\" + response.data.url, title: response.data.fileName });\n            //             quill.setSelection(position + 1);\n\n            //             if (this._isMounted) {\n            //                 this.setState({\n            //                     files: [...this.state.files, file]\n            //                 }, () => { this.props.onFilesChange(this.state.files) });\n            //             }\n            //         } else {\n            //             return alert('failed to upload file')\n            //         }\n            //     })\n        }\n    }\n\n    insertFile = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n            const file = e.currentTarget.files[0];\n\n            let formData = new FormData();\n            // const config = {\n            //     header: { 'content-type': 'multipart/form-data' }\n            // }\n            formData.append(\"file\", file);\n\n            // axios.post('/api/blog/uploadfiles', formData, config)\n            //     .then(response => {\n            //         if (response.data.success) {\n\n            //             const quill = this.reactQuillRef.getEditor();\n            //             quill.focus();\n\n            //             let range = quill.getSelection();\n            //             let position = range ? range.index : 0;\n            //             quill.insertEmbed(position, \"file\", response.data.fileName);\n            //             quill.setSelection(position + 1);\n\n            //             if (this._isMounted) {\n            //                 this.setState({\n            //                     files: [...this.state.files, file]\n            //                 }, () => { this.props.onFilesChange(this.state.files) });\n            //             }\n            //         };\n            //     })\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <div id=\"toolbar\">\n                    <select className=\"ql-header\" defaultValue={\"\"} onChange={e => e.persist()}>\n                        <option value=\"1\" />\n                        <option value=\"2\" />\n                        <option value=\"\" />\n                    </select>\n                    <button className=\"ql-bold\" />\n                    <button className=\"ql-italic\" />\n                    <button className=\"ql-underline\" />\n                    <button className=\"ql-strike\" />\n                    <button className=\"ql-insertImage\">\n                        <Icon name=\"picture\" />\n                    </button>\n                    {/* <button className=\"ql-insertVideo\">\n                        <Icon name=\"video\" />\n                    </button> */}\n                    {/* <button className=\"ql-insertFile\">\n                        F\n                    </button> */}\n                    <button className=\"ql-link\" />\n                    <button className=\"ql-code-block\" />\n                    <button className=\"ql-video\" />\n                    <button className=\"ql-blockquote\" />\n                    <button className=\"ql-clean\" />\n\n\n\n                </div>\n                <ReactQuill\n                    ref={(el) => { this.reactQuillRef = el }}\n                    theme={'snow'}\n                    onChange={this.handleChange}\n                    modules={this.modules}\n                    formats={this.formats}\n                    value={this.state.editorHtml}\n                    placeholder={this.props.placeholder}\n                />\n                <input type=\"file\" accept=\"image/*\" ref={this.inputOpenImageRef} style={{ display: \"none\" }} onChange={this.insertImage} />\n                {/* <input type=\"file\" accept=\"video/*\" ref={this.inputOpenVideoRef} style={{ display: \"none\" }} onChange={this.insertVideo} /> */}\n                {/* <input type=\"file\" accept=\"*\" ref={this.inputOpenFileRef} style={{ display: \"none\" }} onChange={this.insertFile} /> */}\n            </div>\n        )\n    }\n\n    modules = {\n        syntax: true,\n        toolbar: {\n            container: \"#toolbar\",\n            //id =\"toorbar\"는  그 위에 B I U S I V F P 이거 있는 곳이다. \n            handlers: {\n                insertImage: this.imageHandler,\n                insertVideo: this.videoHandler,\n                insertFile: this.fileHandler,\n                insertPoll: this.pollHandler,\n            }\n        },\n\n    };\n\n    formats = [\n        'header',\n        'bold', 'italic', 'underline', 'strike',\n        'image', 'video', 'file', 'link', \"code-block\", \"video\", \"blockquote\", \"clean\"\n    ];\n}\n\nexport default QuillEditor;","import gql from 'graphql-tag'\nimport React, { useContext, useState, useRef } from 'react'\nimport { useMutation, useQuery } from '@apollo/react-hooks'\nimport { Button, Header, Card, Comment, Grid, Image, Icon, Label, Form, Divider } from 'semantic-ui-react'\nimport moment from 'moment'\nimport { AuthContext } from '../context/auth'\nimport LikeButton from '../components/LikeButton'\nimport DeleteButton from '../components/DeleteButton'\nimport QuillEditor from '../components/editor/QuillEditor'\nimport parse from 'html-react-parser';\n\n\nfunction SinglePost(props) {\n    const postID = props.match.params.postID\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n    const [story, setStory] = useState(\"\")\n    const [comment, setComment] = useState(\"\")\n    const [editing, setEditing] = useState(false)\n    const { user } = useContext(AuthContext)\n\n\n    const [files, setFiles] = useState([])\n\n    const onEditorChange = (value) => {\n        setStory(value)\n    }\n\n    const onFilesChange = (files) => {\n        setFiles(files)\n    }\n\n    const commentInputRef = useRef(null)\n    const [submitComment] = useMutation(SUBMIT_COMMENT_MUTATION, {\n        update() {\n            setComment('');\n            commentInputRef.current.blur();\n        },\n        variables: {\n            postID,\n            body: comment\n        }\n    });\n\n    const [submitEdit] = useMutation(UPDATE_POST_MUTATION, {\n        update() {\n            setEditing(false)\n        },\n        variables: {\n            postID,\n            title,\n            body,\n            story\n        }\n    })\n\n    const { data: { getPost } = {} } = useQuery(FETCH_POST_QUERY, {\n        variables: {\n            postID\n        },\n        onCompleted() {\n            setTitle(getPost.title)\n            setBody(getPost.body)\n            setStory(getPost.story)\n        }\n    })\n\n    let postMarkup;\n    if (!getPost) {\n        postMarkup = <p>Loading post...</p>\n    } else {\n        const {\n            id,\n            title,\n            body,\n            story,\n            createdAt,\n            username,\n            comments,\n            likes,\n            likeCount,\n            commentCount\n        } = getPost;\n\n        postMarkup = (\n            <Grid stackable>\n                <Grid.Column width={3} only=\"computer\">\n                    <Image src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\n                        size=\"small\"\n                        float=\"right\" />\n                </Grid.Column>\n                <Grid.Column width={9}>\n                    <Card fluid>\n                        <Card.Content>\n                            <Card.Header>{title}</Card.Header>\n                            <Card.Meta>{username}</Card.Meta>\n                            <Card.Meta>{moment(createdAt).fromNow()}</Card.Meta>\n                            <Card.Description>{body}</Card.Description>\n                        </Card.Content>\n                    </Card>\n                    <Card.Content extra>\n                        <LikeButton user={user} post={{ id, likeCount, likes }} />\n                        <Button\n                            as=\"div\"\n                            labelPosition=\"right\"\n                            onClick={() => console.log(\"Comment on post\")}>\n                            <Button basic color=\"blue\">\n                                <Icon name=\"comments\" />\n                            </Button>\n                            <Label basic color=\"blue\" pointing=\"left\">\n                                {commentCount}\n                            </Label>\n                        </Button>\n                        {user && user.username === username && (editing ?\n                            <Button.Group floated=\"right\" >\n                                <Button onClick={() => setEditing(!editing)}>Cancle</Button>\n                                <Button.Or />\n                                <Button color=\"teal\" onClick={submitEdit}>Save</Button>\n                            </Button.Group>\n                            :\n                            story ?\n                                <Button floated=\"right\" color=\"teal\" onClick={() => setEditing(!editing)}>Edit Story</Button>\n                                :\n                                <Button floated=\"right\" color=\"teal\" onClick={() => setEditing(!editing)}>Add Story...</Button>)}\n                    </Card.Content>\n                    <Divider hidden />\n                    {user && (editing ?\n                        <QuillEditor\n                            placeholder={\"Start Posting Something\"}\n                            old={story}\n                            onEditorChange={onEditorChange}\n                            onFilesChange={onFilesChange}\n                        />\n                        :\n                        (story && parse(story))\n                    )\n                    }\n                    <Header as='h3' dividing>Comment</Header>\n                    {comments.map(comment => (\n                        <Comment.Group fluid key={comment.id}>\n                            <Comment>\n                                <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/matt.jpg' />\n                                <Comment.Content>\n                                    {user && user.username === comment.username && (\n                                        <DeleteButton postID={id} commentID={comment.id} />\n                                    )}\n                                    <Comment.Author>{comment.username}</Comment.Author>\n                                    <Comment.Metadata>{moment(comment.createdAt).fromNow()}</Comment.Metadata>\n                                    <Comment.Text>{comment.body}</Comment.Text>\n                                </Comment.Content>\n                            </Comment>\n                        </Comment.Group>\n                    ))}\n                    {user && (\n                        <Card fluid>\n                            <Card.Content>\n                                <p>Post a comment</p>\n                                <Form>\n                                    <div className=\"ui action input fluid\">\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Comment..\"\n                                            name=\"comment\"\n                                            value={comment}\n                                            onChange={(event) => setComment(event.target.value)}\n                                            ref={commentInputRef}\n                                        />\n                                        <button\n                                            type=\"submit\"\n                                            className=\"ui button teal\"\n                                            disabled={comment.trim() === ''}\n                                            onClick={submitComment}>\n                                            Submit\n                                            </button>\n                                    </div>\n                                </Form>\n                            </Card.Content>\n                        </Card>\n                    )}\n                </Grid.Column>\n            </Grid>\n        )\n    }\n    return postMarkup\n}\n\nconst SUBMIT_COMMENT_MUTATION = gql`\n  mutation($postID: ID!, $body: String!) {\n    createComment(postID: $postID, body: $body) {\n      id\n      comments {\n        id\n        body\n        createdAt\n        username\n      }\n      commentCount\n    }\n  }\n`;\n\nconst FETCH_POST_QUERY = gql`\n    query($postID: ID!){\n        getPost(postID: $postID){\n            id\n            title\n            body\n            story\n            createdAt\n            username\n            likeCount\n            likes {\n                username\n            }\n            commentCount\n            comments {\n                id\n                username\n                createdAt\n                body\n            }\n        }\n    }\n`;\n\nconst UPDATE_POST_MUTATION = gql`\n    mutation($postID: ID!,$title: String!, $body: String!, $story:String!) {\n        updatePost(postID: $postID, title: $title, body: $body, story: $story){\n            id\n            title\n            body\n            story\n            createdAt\n            username\n            likeCount\n            likes {\n                username\n            }\n            commentCount\n            comments {\n                id\n                username\n                createdAt\n                body\n            }\n        }\n    }\n`;\n\nexport default SinglePost;\n","import { HashRouter, Redirect, BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'semantic-ui-react'\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\n\nimport MenuBar from './components/MenuBar'\nimport Home from './pages/Home'\nimport Register from './pages/Register'\nimport Login from './pages/Login'\nimport Contact from './pages/Contact'\nimport Timer from './pages/Timer'\n\nimport { AuthProvider } from './context/auth'\nimport AuthRoute from './utils/AuthRouter'\n\nimport SinglePost from './pages/SinglePost'\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Container>\n          <MenuBar />\n          <HashRouter>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/dolp-blog' component={Home} />\n            <Route exact path='/contact' component={Contact} />\n            <Route exact path='/timer' component={Timer} />\n            <AuthRoute exact path='/login' component={Login} />\n            <AuthRoute exact path='/register' component={Register} />\n            <Route exact path=\"/posts/:postID\" component={SinglePost} />\n          </HashRouter>\n        </Container>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport App from './App'\nimport ApolloClient from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { createHttpLink } from 'apollo-link-http'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { setContext } from 'apollo-link-context'\nimport { onError } from 'apollo-link-error'; //add apollo error link\n\nconst httpLink = createHttpLink({\n    uri: 'https://dolp-server.herokuapp.com/graphql'\n})\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n        graphQLErrors.map(({ message, locations, path }) =>\n            console.log(\n                `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n            ),\n        );\n    }\n    if (networkError) console.log(`[Network error]: ${networkError}`);\n});\n\nconst authLink = setContext(() => {\n    const token = localStorage.getItem('dolp-token')\n    return {\n        headers: {\n            Authorization: token ? `Bearer ${token}` : ''\n        }\n    }\n})\n\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink).concat(errorLink),\n    cache: new InMemoryCache()\n})\n\n\nexport default (\n    <ApolloProvider client={client}>\n        <App />\n    </ApolloProvider>\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport ApolloProvider from './ApolloProvider'\n\nReactDOM.render(\n  <React.StrictMode>\n    {ApolloProvider}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}